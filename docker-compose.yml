version: '3.8'

services:

  mongodb:
    image: mongo:latest # use the latest image.
    container_name: mongodb
    restart: unless-stopped
    environment: # set required env variables to access mongo
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE} 
    ports:
      - 27017:27017
    volumes:
      - ./mongodb:/data/db
      - ./mongo-init-scripts:/docker-entrypoint-initdb.d/
    networks:
      - app-network
  
  mongo-express:
    image: mongo-express:latest # latest image
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGOEXPRESS_LOGIN}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGOEXPRESS_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017
     # ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/
      ME_CONFIG_MONGODB_PORT: 27017

    networks:
      - app-network

  nginx-proxy:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    depends_on:
      - frontend
      - backend

  backend:
    build:
      context: ./api-server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./api-server/.env
    networks:
      - app-network

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    networks:
      - app-network
    depends_on:
      - backend

networks:
  app-network:
  